syntax = "proto3";

package order;

option go_package = "github.com/yitech/protolayout/protobuf/proto/order";

import "proto/common/common.proto";
import "proto/user/user.proto";
import "proto/product/product.proto";

// Order service definition
service OrderService {
  rpc CreateOrder(CreateOrderRequest) returns (CreateOrderResponse);
  rpc GetOrder(GetOrderRequest) returns (GetOrderResponse);
  rpc UpdateOrder(UpdateOrderRequest) returns (UpdateOrderResponse);
  rpc CancelOrder(CancelOrderRequest) returns (CancelOrderResponse);
  rpc ListOrders(ListOrdersRequest) returns (ListOrdersResponse);
  rpc GetOrderHistory(GetOrderHistoryRequest) returns (GetOrderHistoryResponse);
}

// Order entity
message Order {
  common.Metadata metadata = 1;
  string order_number = 2;
  user.User customer = 3;
  OrderStatus status = 4;
  repeated OrderItem items = 5;
  OrderShipping shipping = 6;
  OrderPayment payment = 7;
  double total_amount = 8;
  double tax_amount = 9;
  double shipping_amount = 10;
  double discount_amount = 11;
}

// Order status enum
enum OrderStatus {
  ORDER_STATUS_UNSPECIFIED = 0;
  ORDER_STATUS_PENDING = 1;
  ORDER_STATUS_CONFIRMED = 2;
  ORDER_STATUS_PROCESSING = 3;
  ORDER_STATUS_SHIPPED = 4;
  ORDER_STATUS_DELIVERED = 5;
  ORDER_STATUS_CANCELLED = 6;
  ORDER_STATUS_REFUNDED = 7;
}

// Order item
message OrderItem {
  product.Product product = 1;
  int32 quantity = 2;
  double unit_price = 3;
  double total_price = 4;
  repeated string options = 5;
}

// Order shipping information
message OrderShipping {
  string address_line1 = 1;
  string address_line2 = 2;
  string city = 3;
  string state = 4;
  string postal_code = 5;
  string country = 6;
  string phone = 7;
  string tracking_number = 8;
  string carrier = 9;
  string estimated_delivery = 10;
}

// Order payment information
message OrderPayment {
  string payment_method = 1;
  string transaction_id = 2;
  PaymentStatus status = 3;
  double amount = 4;
  string currency = 5;
  string payment_date = 6;
}

// Payment status enum
enum PaymentStatus {
  PAYMENT_STATUS_UNSPECIFIED = 0;
  PAYMENT_STATUS_PENDING = 1;
  PAYMENT_STATUS_PROCESSING = 2;
  PAYMENT_STATUS_COMPLETED = 3;
  PAYMENT_STATUS_FAILED = 4;
  PAYMENT_STATUS_REFUNDED = 5;
}

// Create order request
message CreateOrderRequest {
  string customer_id = 1;
  repeated CreateOrderItemRequest items = 2;
  OrderShipping shipping = 3;
  string payment_method = 4;
  string coupon_code = 5;
}

// Create order item request
message CreateOrderItemRequest {
  string product_id = 1;
  int32 quantity = 2;
  repeated string options = 3;
}

// Create order response
message CreateOrderResponse {
  Order order = 1;
  common.ErrorResponse error = 2;
}

// Get order request
message GetOrderRequest {
  string order_id = 1;
}

// Get order response
message GetOrderResponse {
  Order order = 1;
  common.ErrorResponse error = 2;
}

// Update order request
message UpdateOrderRequest {
  string order_id = 1;
  OrderStatus status = 2;
  OrderShipping shipping = 3;
  string tracking_number = 4;
}

// Update order response
message UpdateOrderResponse {
  Order order = 1;
  common.ErrorResponse error = 2;
}

// Cancel order request
message CancelOrderRequest {
  string order_id = 1;
  string reason = 2;
}

// Cancel order response
message CancelOrderResponse {
  bool success = 1;
  common.ErrorResponse error = 2;
}

// List orders request
message ListOrdersRequest {
  common.PaginationRequest pagination = 1;
  string customer_id = 2;
  OrderStatus status = 3;
  string date_from = 4;
  string date_to = 5;
}

// List orders response
message ListOrdersResponse {
  repeated Order orders = 1;
  common.PaginationResponse pagination = 2;
  common.ErrorResponse error = 3;
}

// Get order history request
message GetOrderHistoryRequest {
  string order_id = 1;
}

// Order history entry
message OrderHistoryEntry {
  string timestamp = 1;
  OrderStatus status = 2;
  string description = 3;
  user.User updated_by = 4;
}

// Get order history response
message GetOrderHistoryResponse {
  repeated OrderHistoryEntry history = 1;
  common.ErrorResponse error = 2;
}
