syntax = "proto3";

package user;

option go_package = "github.com/yitech/protolayout/protobuf/proto/user";

import "proto/common/common.proto";

// User service definition
service UserService {
  rpc CreateUser(CreateUserRequest) returns (CreateUserResponse);
  rpc GetUser(GetUserRequest) returns (GetUserResponse);
  rpc UpdateUser(UpdateUserRequest) returns (UpdateUserResponse);
  rpc DeleteUser(DeleteUserRequest) returns (DeleteUserResponse);
  rpc ListUsers(ListUsersRequest) returns (ListUsersResponse);
}

// User entity
message User {
  common.Metadata metadata = 1;
  string username = 2;
  string email = 3;
  string full_name = 4;
  UserRole role = 5;
  UserProfile profile = 6;
}

// User role enum
enum UserRole {
  USER_ROLE_UNSPECIFIED = 0;
  USER_ROLE_ADMIN = 1;
  USER_ROLE_USER = 2;
  USER_ROLE_MODERATOR = 3;
}

// User profile information
message UserProfile {
  string avatar_url = 1;
  string bio = 2;
  string location = 3;
  map<string, string> preferences = 4;
}

// Create user request
message CreateUserRequest {
  string username = 1;
  string email = 2;
  string full_name = 3;
  string password = 4;
  UserRole role = 5;
  UserProfile profile = 6;
}

// Create user response
message CreateUserResponse {
  User user = 1;
  common.ErrorResponse error = 2;
}

// Get user request
message GetUserRequest {
  string user_id = 1;
}

// Get user response
message GetUserResponse {
  User user = 1;
  common.ErrorResponse error = 2;
}

// Update user request
message UpdateUserRequest {
  string user_id = 1;
  string full_name = 2;
  UserProfile profile = 3;
  UserRole role = 4;
}

// Update user response
message UpdateUserResponse {
  User user = 1;
  common.ErrorResponse error = 2;
}

// Delete user request
message DeleteUserRequest {
  string user_id = 1;
}

// Delete user response
message DeleteUserResponse {
  bool success = 1;
  common.ErrorResponse error = 2;
}

// List users request
message ListUsersRequest {
  common.PaginationRequest pagination = 1;
  string filter_by_role = 2;
  string search_query = 3;
}

// List users response
message ListUsersResponse {
  repeated User users = 1;
  common.PaginationResponse pagination = 2;
  common.ErrorResponse error = 3;
}
