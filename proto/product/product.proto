syntax = "proto3";

package product;

option go_package = "github.com/yitech/protolayout/protobuf/proto/product";

import "proto/common/common.proto";
import "proto/user/user.proto";

// Product service definition
service ProductService {
  rpc CreateProduct(CreateProductRequest) returns (CreateProductResponse);
  rpc GetProduct(GetProductRequest) returns (GetProductResponse);
  rpc UpdateProduct(UpdateProductRequest) returns (UpdateProductResponse);
  rpc DeleteProduct(DeleteProductRequest) returns (DeleteProductResponse);
  rpc ListProducts(ListProductsRequest) returns (ListProductsResponse);
  rpc GetProductReviews(GetProductReviewsRequest) returns (GetProductReviewsResponse);
}

// Product entity
message Product {
  common.Metadata metadata = 1;
  string name = 2;
  string description = 3;
  double price = 4;
  ProductCategory category = 5;
  ProductStatus status = 6;
  repeated string tags = 7;
  ProductInventory inventory = 8;
  user.User created_by_user = 9;
}

// Product category enum
enum ProductCategory {
  PRODUCT_CATEGORY_UNSPECIFIED = 0;
  PRODUCT_CATEGORY_ELECTRONICS = 1;
  PRODUCT_CATEGORY_CLOTHING = 2;
  PRODUCT_CATEGORY_BOOKS = 3;
  PRODUCT_CATEGORY_HOME = 4;
  PRODUCT_CATEGORY_SPORTS = 5;
}

// Product status enum
enum ProductStatus {
  PRODUCT_STATUS_UNSPECIFIED = 0;
  PRODUCT_STATUS_AVAILABLE = 1;
  PRODUCT_STATUS_OUT_OF_STOCK = 2;
  PRODUCT_STATUS_DISCONTINUED = 3;
  PRODUCT_STATUS_DRAFT = 4;
}

// Product inventory information
message ProductInventory {
  int32 quantity = 1;
  int32 reserved_quantity = 2;
  string warehouse_location = 3;
  double reorder_threshold = 4;
}

// Product review
message ProductReview {
  common.Metadata metadata = 1;
  string product_id = 2;
  user.User reviewer = 3;
  int32 rating = 4;
  string comment = 5;
  repeated string images = 6;
}

// Create product request
message CreateProductRequest {
  string name = 1;
  string description = 2;
  double price = 3;
  ProductCategory category = 4;
  repeated string tags = 5;
  ProductInventory inventory = 6;
  string created_by_user_id = 7;
}

// Create product response
message CreateProductResponse {
  Product product = 1;
  common.ErrorResponse error = 2;
}

// Get product request
message GetProductRequest {
  string product_id = 1;
}

// Get product response
message GetProductResponse {
  Product product = 1;
  common.ErrorResponse error = 2;
}

// Update product request
message UpdateProductRequest {
  string product_id = 1;
  string name = 2;
  string description = 3;
  double price = 4;
  ProductCategory category = 5;
  ProductStatus status = 6;
  repeated string tags = 7;
  ProductInventory inventory = 8;
}

// Update product response
message UpdateProductResponse {
  Product product = 1;
  common.ErrorResponse error = 2;
}

// Delete product request
message DeleteProductRequest {
  string product_id = 1;
}

// Delete product response
message DeleteProductResponse {
  bool success = 1;
  common.ErrorResponse error = 2;
}

// List products request
message ListProductsRequest {
  common.PaginationRequest pagination = 1;
  ProductCategory category = 2;
  ProductStatus status = 3;
  string search_query = 4;
  double min_price = 5;
  double max_price = 6;
}

// List products response
message ListProductsResponse {
  repeated Product products = 1;
  common.PaginationResponse pagination = 2;
  common.ErrorResponse error = 3;
}

// Get product reviews request
message GetProductReviewsRequest {
  string product_id = 1;
  common.PaginationRequest pagination = 2;
}

// Get product reviews response
message GetProductReviewsResponse {
  repeated ProductReview reviews = 1;
  common.PaginationResponse pagination = 2;
  common.ErrorResponse error = 3;
}
