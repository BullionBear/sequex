// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        (unknown)
// source: protobuf/order/order.proto

package order

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// BUY or SELL side of an order
type Side int32

const (
	Side_SIDE_UNSPECIFIED Side = 0
	Side_BUY              Side = 1
	Side_SELL             Side = 2
)

// Enum value maps for Side.
var (
	Side_name = map[int32]string{
		0: "SIDE_UNSPECIFIED",
		1: "BUY",
		2: "SELL",
	}
	Side_value = map[string]int32{
		"SIDE_UNSPECIFIED": 0,
		"BUY":              1,
		"SELL":             2,
	}
)

func (x Side) Enum() *Side {
	p := new(Side)
	*p = x
	return p
}

func (x Side) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Side) Descriptor() protoreflect.EnumDescriptor {
	return file_protobuf_order_order_proto_enumTypes[0].Descriptor()
}

func (Side) Type() protoreflect.EnumType {
	return &file_protobuf_order_order_proto_enumTypes[0]
}

func (x Side) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Side.Descriptor instead.
func (Side) EnumDescriptor() ([]byte, []int) {
	return file_protobuf_order_order_proto_rawDescGZIP(), []int{0}
}

// Optional: how long a Limit Order remains active
type TimeInForce int32

const (
	TimeInForce_TIF_UNSPECIFIED TimeInForce = 0
	TimeInForce_GTC             TimeInForce = 1 // Good‑Till‑Cancelled
	TimeInForce_IOC             TimeInForce = 2 // Immediate‑Or‑Cancel
	TimeInForce_FOK             TimeInForce = 3 // Fill‑Or‑Kill
)

// Enum value maps for TimeInForce.
var (
	TimeInForce_name = map[int32]string{
		0: "TIF_UNSPECIFIED",
		1: "GTC",
		2: "IOC",
		3: "FOK",
	}
	TimeInForce_value = map[string]int32{
		"TIF_UNSPECIFIED": 0,
		"GTC":             1,
		"IOC":             2,
		"FOK":             3,
	}
)

func (x TimeInForce) Enum() *TimeInForce {
	p := new(TimeInForce)
	*p = x
	return p
}

func (x TimeInForce) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TimeInForce) Descriptor() protoreflect.EnumDescriptor {
	return file_protobuf_order_order_proto_enumTypes[1].Descriptor()
}

func (TimeInForce) Type() protoreflect.EnumType {
	return &file_protobuf_order_order_proto_enumTypes[1]
}

func (x TimeInForce) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TimeInForce.Descriptor instead.
func (TimeInForce) EnumDescriptor() ([]byte, []int) {
	return file_protobuf_order_order_proto_rawDescGZIP(), []int{1}
}

type MarketOrderRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Symbol        string                 `protobuf:"bytes,1,opt,name=symbol,proto3" json:"symbol,omitempty"`              // e.g. "BTCUSDT"
	Side          Side                   `protobuf:"varint,2,opt,name=side,proto3,enum=order.Side" json:"side,omitempty"` // BUY or SELL
	Quantity      string                 `protobuf:"bytes,3,opt,name=quantity,proto3" json:"quantity,omitempty"`          // base‑asset size
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MarketOrderRequest) Reset() {
	*x = MarketOrderRequest{}
	mi := &file_protobuf_order_order_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MarketOrderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarketOrderRequest) ProtoMessage() {}

func (x *MarketOrderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_order_order_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarketOrderRequest.ProtoReflect.Descriptor instead.
func (*MarketOrderRequest) Descriptor() ([]byte, []int) {
	return file_protobuf_order_order_proto_rawDescGZIP(), []int{0}
}

func (x *MarketOrderRequest) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *MarketOrderRequest) GetSide() Side {
	if x != nil {
		return x.Side
	}
	return Side_SIDE_UNSPECIFIED
}

func (x *MarketOrderRequest) GetQuantity() string {
	if x != nil {
		return x.Quantity
	}
	return ""
}

type LimitOrderRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Symbol        string                 `protobuf:"bytes,1,opt,name=symbol,proto3" json:"symbol,omitempty"`
	Side          Side                   `protobuf:"varint,2,opt,name=side,proto3,enum=order.Side" json:"side,omitempty"`
	Quantity      string                 `protobuf:"bytes,3,opt,name=quantity,proto3" json:"quantity,omitempty"`
	Price         string                 `protobuf:"bytes,4,opt,name=price,proto3" json:"price,omitempty"`                     // limit price
	Tif           TimeInForce            `protobuf:"varint,5,opt,name=tif,proto3,enum=order.TimeInForce" json:"tif,omitempty"` // time‑in‑force (optional)
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LimitOrderRequest) Reset() {
	*x = LimitOrderRequest{}
	mi := &file_protobuf_order_order_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LimitOrderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LimitOrderRequest) ProtoMessage() {}

func (x *LimitOrderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_order_order_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LimitOrderRequest.ProtoReflect.Descriptor instead.
func (*LimitOrderRequest) Descriptor() ([]byte, []int) {
	return file_protobuf_order_order_proto_rawDescGZIP(), []int{1}
}

func (x *LimitOrderRequest) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *LimitOrderRequest) GetSide() Side {
	if x != nil {
		return x.Side
	}
	return Side_SIDE_UNSPECIFIED
}

func (x *LimitOrderRequest) GetQuantity() string {
	if x != nil {
		return x.Quantity
	}
	return ""
}

func (x *LimitOrderRequest) GetPrice() string {
	if x != nil {
		return x.Price
	}
	return ""
}

func (x *LimitOrderRequest) GetTif() TimeInForce {
	if x != nil {
		return x.Tif
	}
	return TimeInForce_TIF_UNSPECIFIED
}

type StopMarketOrderRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Symbol        string                 `protobuf:"bytes,1,opt,name=symbol,proto3" json:"symbol,omitempty"`
	Side          Side                   `protobuf:"varint,2,opt,name=side,proto3,enum=order.Side" json:"side,omitempty"`
	Quantity      string                 `protobuf:"bytes,3,opt,name=quantity,proto3" json:"quantity,omitempty"`
	StopPrice     string                 `protobuf:"bytes,4,opt,name=stop_price,json=stopPrice,proto3" json:"stop_price,omitempty"` // trigger price for the stop
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StopMarketOrderRequest) Reset() {
	*x = StopMarketOrderRequest{}
	mi := &file_protobuf_order_order_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StopMarketOrderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopMarketOrderRequest) ProtoMessage() {}

func (x *StopMarketOrderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_order_order_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopMarketOrderRequest.ProtoReflect.Descriptor instead.
func (*StopMarketOrderRequest) Descriptor() ([]byte, []int) {
	return file_protobuf_order_order_proto_rawDescGZIP(), []int{2}
}

func (x *StopMarketOrderRequest) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *StopMarketOrderRequest) GetSide() Side {
	if x != nil {
		return x.Side
	}
	return Side_SIDE_UNSPECIFIED
}

func (x *StopMarketOrderRequest) GetQuantity() string {
	if x != nil {
		return x.Quantity
	}
	return ""
}

func (x *StopMarketOrderRequest) GetStopPrice() string {
	if x != nil {
		return x.StopPrice
	}
	return ""
}

type OrderResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	OrderId       string                 `protobuf:"bytes,1,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`           // exchange‑assigned order ID
	ClientOid     string                 `protobuf:"bytes,2,opt,name=client_oid,json=clientOid,proto3" json:"client_oid,omitempty"`     // echoed client‑provided ID (optional)
	Status        string                 `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`                            // initial status, e.g. "NEW"
	AcceptedAt    int64                  `protobuf:"varint,4,opt,name=accepted_at,json=acceptedAt,proto3" json:"accepted_at,omitempty"` // server timestamp (epoch ms)
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OrderResponse) Reset() {
	*x = OrderResponse{}
	mi := &file_protobuf_order_order_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OrderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderResponse) ProtoMessage() {}

func (x *OrderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_order_order_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderResponse.ProtoReflect.Descriptor instead.
func (*OrderResponse) Descriptor() ([]byte, []int) {
	return file_protobuf_order_order_proto_rawDescGZIP(), []int{3}
}

func (x *OrderResponse) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

func (x *OrderResponse) GetClientOid() string {
	if x != nil {
		return x.ClientOid
	}
	return ""
}

func (x *OrderResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *OrderResponse) GetAcceptedAt() int64 {
	if x != nil {
		return x.AcceptedAt
	}
	return 0
}

var File_protobuf_order_order_proto protoreflect.FileDescriptor

var file_protobuf_order_order_proto_rawDesc = string([]byte{
	0x0a, 0x1a, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x2f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x69, 0x0a, 0x12, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x79,
	0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x79, 0x6d, 0x62,
	0x6f, 0x6c, 0x12, 0x1f, 0x0a, 0x04, 0x73, 0x69, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x0b, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x53, 0x69, 0x64, 0x65, 0x52, 0x04, 0x73,
	0x69, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x22,
	0xa4, 0x01, 0x0a, 0x11, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x1f, 0x0a,
	0x04, 0x73, 0x69, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0b, 0x2e, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x2e, 0x53, 0x69, 0x64, 0x65, 0x52, 0x04, 0x73, 0x69, 0x64, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72,
	0x69, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65,
	0x12, 0x24, 0x0a, 0x03, 0x74, 0x69, 0x66, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x49, 0x6e, 0x46, 0x6f, 0x72, 0x63,
	0x65, 0x52, 0x03, 0x74, 0x69, 0x66, 0x22, 0x8c, 0x01, 0x0a, 0x16, 0x53, 0x74, 0x6f, 0x70, 0x4d,
	0x61, 0x72, 0x6b, 0x65, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x1f, 0x0a, 0x04, 0x73, 0x69, 0x64,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0b, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e,
	0x53, 0x69, 0x64, 0x65, 0x52, 0x04, 0x73, 0x69, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75,
	0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x71, 0x75,
	0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x6f, 0x70, 0x5f, 0x70,
	0x72, 0x69, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x6f, 0x70,
	0x50, 0x72, 0x69, 0x63, 0x65, 0x22, 0x82, 0x01, 0x0a, 0x0d, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x6f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4f, 0x69,
	0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x63, 0x63,
	0x65, 0x70, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a,
	0x61, 0x63, 0x63, 0x65, 0x70, 0x74, 0x65, 0x64, 0x41, 0x74, 0x2a, 0x2f, 0x0a, 0x04, 0x53, 0x69,
	0x64, 0x65, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x49, 0x44, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45,
	0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x42, 0x55, 0x59, 0x10,
	0x01, 0x12, 0x08, 0x0a, 0x04, 0x53, 0x45, 0x4c, 0x4c, 0x10, 0x02, 0x2a, 0x3d, 0x0a, 0x0b, 0x54,
	0x69, 0x6d, 0x65, 0x49, 0x6e, 0x46, 0x6f, 0x72, 0x63, 0x65, 0x12, 0x13, 0x0a, 0x0f, 0x54, 0x49,
	0x46, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12,
	0x07, 0x0a, 0x03, 0x47, 0x54, 0x43, 0x10, 0x01, 0x12, 0x07, 0x0a, 0x03, 0x49, 0x4f, 0x43, 0x10,
	0x02, 0x12, 0x07, 0x0a, 0x03, 0x46, 0x4f, 0x4b, 0x10, 0x03, 0x32, 0xea, 0x01, 0x0a, 0x13, 0x42,
	0x69, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x12, 0x43, 0x0a, 0x10, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x4d, 0x61, 0x72, 0x6b, 0x65,
	0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x19, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x4d,
	0x61, 0x72, 0x6b, 0x65, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x14, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x41, 0x0a, 0x0f, 0x50, 0x6c, 0x61, 0x63, 0x65,
	0x4c, 0x69, 0x6d, 0x69, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x18, 0x2e, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x2e, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4b, 0x0a, 0x14, 0x50, 0x6c,
	0x61, 0x63, 0x65, 0x53, 0x74, 0x6f, 0x70, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x12, 0x1d, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x53, 0x74, 0x6f, 0x70, 0x4d,
	0x61, 0x72, 0x6b, 0x65, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x14, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0xee, 0x01, 0x0a, 0x17, 0x42, 0x69, 0x6e, 0x61,
	0x6e, 0x63, 0x65, 0x50, 0x65, 0x72, 0x70, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x43, 0x0a, 0x10, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x4d, 0x61, 0x72, 0x6b,
	0x65, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x19, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e,
	0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x14, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x41, 0x0a, 0x0f, 0x50, 0x6c, 0x61, 0x63,
	0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x18, 0x2e, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x2e, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4b, 0x0a, 0x14, 0x50,
	0x6c, 0x61, 0x63, 0x65, 0x53, 0x74, 0x6f, 0x70, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x12, 0x1d, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x53, 0x74, 0x6f, 0x70,
	0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x14, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x12, 0x5a, 0x10, 0x2e, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_protobuf_order_order_proto_rawDescOnce sync.Once
	file_protobuf_order_order_proto_rawDescData []byte
)

func file_protobuf_order_order_proto_rawDescGZIP() []byte {
	file_protobuf_order_order_proto_rawDescOnce.Do(func() {
		file_protobuf_order_order_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_protobuf_order_order_proto_rawDesc), len(file_protobuf_order_order_proto_rawDesc)))
	})
	return file_protobuf_order_order_proto_rawDescData
}

var file_protobuf_order_order_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_protobuf_order_order_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_protobuf_order_order_proto_goTypes = []any{
	(Side)(0),                      // 0: order.Side
	(TimeInForce)(0),               // 1: order.TimeInForce
	(*MarketOrderRequest)(nil),     // 2: order.MarketOrderRequest
	(*LimitOrderRequest)(nil),      // 3: order.LimitOrderRequest
	(*StopMarketOrderRequest)(nil), // 4: order.StopMarketOrderRequest
	(*OrderResponse)(nil),          // 5: order.OrderResponse
}
var file_protobuf_order_order_proto_depIdxs = []int32{
	0,  // 0: order.MarketOrderRequest.side:type_name -> order.Side
	0,  // 1: order.LimitOrderRequest.side:type_name -> order.Side
	1,  // 2: order.LimitOrderRequest.tif:type_name -> order.TimeInForce
	0,  // 3: order.StopMarketOrderRequest.side:type_name -> order.Side
	2,  // 4: order.BinanceOrderService.PlaceMarketOrder:input_type -> order.MarketOrderRequest
	3,  // 5: order.BinanceOrderService.PlaceLimitOrder:input_type -> order.LimitOrderRequest
	4,  // 6: order.BinanceOrderService.PlaceStopMarketOrder:input_type -> order.StopMarketOrderRequest
	2,  // 7: order.BinancePerpOrderService.PlaceMarketOrder:input_type -> order.MarketOrderRequest
	3,  // 8: order.BinancePerpOrderService.PlaceLimitOrder:input_type -> order.LimitOrderRequest
	4,  // 9: order.BinancePerpOrderService.PlaceStopMarketOrder:input_type -> order.StopMarketOrderRequest
	5,  // 10: order.BinanceOrderService.PlaceMarketOrder:output_type -> order.OrderResponse
	5,  // 11: order.BinanceOrderService.PlaceLimitOrder:output_type -> order.OrderResponse
	5,  // 12: order.BinanceOrderService.PlaceStopMarketOrder:output_type -> order.OrderResponse
	5,  // 13: order.BinancePerpOrderService.PlaceMarketOrder:output_type -> order.OrderResponse
	5,  // 14: order.BinancePerpOrderService.PlaceLimitOrder:output_type -> order.OrderResponse
	5,  // 15: order.BinancePerpOrderService.PlaceStopMarketOrder:output_type -> order.OrderResponse
	10, // [10:16] is the sub-list for method output_type
	4,  // [4:10] is the sub-list for method input_type
	4,  // [4:4] is the sub-list for extension type_name
	4,  // [4:4] is the sub-list for extension extendee
	0,  // [0:4] is the sub-list for field type_name
}

func init() { file_protobuf_order_order_proto_init() }
func file_protobuf_order_order_proto_init() {
	if File_protobuf_order_order_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_protobuf_order_order_proto_rawDesc), len(file_protobuf_order_order_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_protobuf_order_order_proto_goTypes,
		DependencyIndexes: file_protobuf_order_order_proto_depIdxs,
		EnumInfos:         file_protobuf_order_order_proto_enumTypes,
		MessageInfos:      file_protobuf_order_order_proto_msgTypes,
	}.Build()
	File_protobuf_order_order_proto = out.File
	file_protobuf_order_order_proto_goTypes = nil
	file_protobuf_order_order_proto_depIdxs = nil
}
