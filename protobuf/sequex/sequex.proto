syntax = "proto3";

package sequex;

option go_package = "./protobuf/sequex";

import "google/protobuf/timestamp.proto";

// Enum for Event Type
enum EventType {
  // Unknown
  UNKNOWN_EVENT = 0;

  // Kline Events
  KLINE_UPDATE = 1;
  KLINE_ACK = 2;
  KLINE_FAILED = 3;
  KLINE_FINISHED = 4;

  // Order Events
  ORDER_UPDATE = 5;
  ORDER_ACK = 6;
  ORDER_FAILED = 7;
  ORDER_FINISHED = 8;

  // Execution Events
  EXECUTION_UPDATE = 9;
  EXECUTION_ACK = 10;
  EXECUTION_FAILED = 11;
  EXECUTION_FINISHED = 12;
}


// Enum for Event Source
enum EventSource {
    UNKNOWN_SOURCE = 0;
    SEQUEX = 1;
    STRATEGIST = 2;
    // Add more event sources as needed
}

// Message representing an Event
message Event {
    string id = 1; // UUID
    EventType type = 2;
    EventSource source = 3;
    google.protobuf.Timestamp created_at = 4;
    bytes payload = 6;
}


// Service definition for streaming Events
service SequexService {
    rpc OnEvent(stream Event) returns (stream Event);
}